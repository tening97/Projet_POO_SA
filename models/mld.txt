MLD
Heritage
-SingleTable(defaut):Toutes les classes qui participent dans l'heritage seront
dans une seule table
personne(id,nom_complet,role,login,password,grade,adresse,matricule,sexe)

-Joined:Creer autant de table  que de classe
 mais la clé de la classe mére migre comme clé etrangére au niveau des
classes filles
personne(id,nom_complet,role)
user(login,password,#personne_id )
rp(#personne_id )
ac(#personne_id )
etudiant(#personne_id,adresse,matricule,sexe)
proofesseur(grade,#personne_id)


OneToMany ->ManyToOne
1->*
*->1
MLD =>Cle du faible qui migre au niveau du fort
annee_colaire(id,libelle)
inscription(annee_id,ac_id,etudiant_id,classe_id)
ManyToMany ->ManyToOne=>
classe(id,libelle,filiere,niveau)
professeur_classe(#classe_id,personne_id)

//Type Requete
//Requete Mis a jour=> change l'etat de la table
//retourner un entier => nbre de ligne modifier
insert
update
delete
//retourne des données => objet,tableau
select



//require_once("../models/Professeur.php");
//1-Inclure le fichier de la classen faisant de l'autoloading
//composer,en faisant de l'autoloading
//composer = outil de gestionnaire de dependance
//Gestionnaire = logiciel dont l'objectif est
//telecharger une dependance
//configurer dans votre projet
//dependance =>toutes les classes externes que l'on peut ajouter dans son 
//projet pour avoir des fonctionnalités supplémentaires
//hub de dependance = site ou on regroupe toutes les dependances du langage



/* require_once("../models/User.php");
require_once("../models/AC.php");
require_once("../models/Inscription.php");


 */

/* $ac = new AC();
$ac->setNomComplet("Rawane Mbaye");
$ac->setLogin("raw@gmail.com");
$ac->setPassword("azerty1");
$ac->insert();

$acs = AC::findAll();
echo "<pre>";
var_dump($acs);
echo "</pre>";
die(); */


//2-Creer l'objet ou Instanciation
/* $pers1 = new Personne(); //appel methode de la classe nommée le constructeur
//3- Donner un etat à un objet

$pers1->setId(1);
$pers1->setNomComplet('Tening Ngom');


$pers2->setId(2);
$pers2->setNomComplet('Assane Ngom');


echo $pers1->getId();
echo $pers2->getId(); */


//Appel  Methode static

/* $pers2 = new User();
$pers2->setId(2)
    ->setNomComplet('Assane Ngom');



Personne::setNbrePersonne(12);
echo Personne::getNbrePersonne(); */

/* User::findAll(); //select * from personne where role not like ROLE_PROFESSEUR
$ac =  new AC();
AC::findAll(); //Tous les ac select * from personne where role  like ROLE_AC
Professeur::findAll(); //select * from personne where role like ROLE_PROFESSEUR

$ins =  new Inscription();
$ins->ac();
$ins->anneeScolaire(); */



 $etu = new Etudiant();
$etu->setNomComplet('Marie Ndiaye');
$etu->setMatricule('Marie2');
$etu->setSexe('F');
$etu->setAdresse('Liberte 6');
$etu->insert();
 

